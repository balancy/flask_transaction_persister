services:
  db:
    image: postgres:16
    container_name: transaction-db
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - db_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: transaction-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  app:
    build:
      context: .
      dockerfile: src/Dockerfile.prod
      target: prod
    container_name: transaction-app
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql+psycopg2://username:password@db:5432/db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - FLASK_ENV=production
      - PYTHON_PATH=/app/src
      - IS_TRACING_ON=${IS_TRACING_ON:-True}
      - IS_METRICS_MONITORING_ON=${IS_METRICS_MONITORING_ON:-True}
    depends_on:
      - db
      - rabbitmq
      - jaeger
      - prometheus
    entrypoint: ["bash", "-c", "./entrypoint.sh gunicorn -w 4 -b 0.0.0.0:5000 'app:create_app()'"]

  worker:
    build:
      context: .
      dockerfile: src/Dockerfile.prod
      target: prod
    container_name: transaction-worker
    environment:
      - DATABASE_URL=postgresql+psycopg2://username:password@db:5432/db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - FLASK_ENV=production
      - PYTHON_PATH=/app/src
      - PROMETHEUS_MULTIPROC_DIR=/var/cache/celery_prometheus
      - IS_TRACING_ON=${IS_TRACING_ON:-True}
      - IS_METRICS_MONITORING_ON=${IS_METRICS_MONITORING_ON:-True}
    depends_on:
      - db
      - rabbitmq
      - jaeger
      - prometheus
    entrypoint: ["bash", "-c", "./entrypoint.sh celery -A celery_config.celery_app worker --loglevel=INFO  -Q transaction-queue  --prometheus-collector-addr 0.0.0.0:6543"]

  jaeger:
    image: jaegertracing/all-in-one:1.46
    container_name: transaction-jaeger
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411

  prometheus:
    image: prom/prometheus
    container_name: transaction-prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro


  grafana:
    image: grafana/grafana
    container_name: transaction-grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning

  node_exporter:
    image: prom/node-exporter
    container_name: transaction-node-exporter
    ports:
      - "9100:9100"

volumes:
  db_data:
