services:
  db:
    image: postgres:16
    container_name: transaction-db
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: transaction-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  app:
    build:
      context: .
      dockerfile: src/Dockerfile.prod
      target: prod
    container_name: transaction-app
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql+psycopg2://username:password@db:5432/db
      - FLASK_APP=src.app:create_app()
      - FLASK_ENV=production
      - PYTHON_PATH=/app/src
    depends_on:
      - db
      - rabbitmq
    entrypoint: ["bash", "-c", "./entrypoint.sh gunicorn -w 4 -b 0.0.0.0:5000 'app:create_app()'"]

  worker:
    build:
      context: .
      dockerfile: src/Dockerfile.prod
      target: prod
    container_name: transaction-worker
    environment:
      - DATABASE_URL=postgresql+psycopg2://username:password@db:5432/db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - FLASK_APP=src.app:create_app()
      - FLASK_ENV=production
      - PYTHON_PATH=/app/src
    depends_on:
      - db
      - rabbitmq
    entrypoint: ["bash", "-c", "./entrypoint.sh celery -A celery_config.celery_app worker --loglevel=INFO  -Q transaction-queue"]

volumes:
  db_data:
