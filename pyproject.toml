[tool.poetry]
name = "flask-test"
version = "0.1.0"
description = ""
authors = ["balancy <balancy@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
flask = "^3.0.3"
sqlalchemy = "^2.0.32"
pydantic = "^2.8.2"
environs = "^11.0.0"
psycopg2-binary = "^2.9.9"
gunicorn = "^23.0.0"
alembic = "^1.13.2"
requests = "^2.32.3"
flask-injector = "^0.15.0"
pika = "^1.3.2"
celery = "^5.4.0"


[tool.poetry.group.tracing.dependencies]
opentelemetry-api = "^1.27.0"
opentelemetry-sdk = "^1.27.0"
opentelemetry-instrumentation-flask = "^0.48b0"
opentelemetry-exporter-jaeger = "^1.21.0"
opentelemetry-instrumentation-psycopg2 = "^0.48b0"
opentelemetry-instrumentation-celery = "^0.48b0"
opentelemetry-instrumentation-pika = "^0.48b0"


[tool.poetry.group.metrics.dependencies]
celery-prometheus = "^1.1.0"
prometheus-flask-exporter = "^0.23.1"

[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
ruff = "^0.6.4"
pre-commit = "^3.8.0"

[tool.poetry.group.tests.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
responses = "^0.25.3"
pytest-mock = "^3.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
lint.select = ["ALL"]
line-length = 79
lint.ignore = ["D203", "D213", "TCH001", "TCH002", "I001", "S101"]
exclude = ["src/infrastructure/persistence/migrations/"]

[tool.ruff.lint.mccabe]
max-complexity = 5

[tool.black]
line-length = 79

[tool.coverage.run]
branch = true
omit = ["*/migrations/*", "tests/*"]

[tool.coverage.report]
fail_under = 80
skip_empty = true
skip_covered = true
exclude_lines = [
  "if TYPE_CHECKING:",
  "raise NotImplementedError",
  "pragma: no cover",
]

[tool.pytest.ini_options]
pythonpath = "src"
python_functions = "test_*"
addopts = [
  "--tb=long",
  "--strict-markers",
  "-vv",
  "--cov-report=term-missing",
  "--cov=.",
]
testpaths = ["tests/"]
filterwarnings = ["ignore::DeprecationWarning"]
