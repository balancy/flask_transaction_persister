services:
  db:
    image: postgres:16
    container_name: transaction-db
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "5444:5432"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: transaction-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  app:
    build:
      context: .
      dockerfile: src/Dockerfile.dev
      target: dev
    container_name: transaction-app
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql+psycopg2://username:password@db:5432/db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - FLASK_ENV=development
      - PYTHON_PATH=/app/src
      - IS_TRACING_ON=False
      - IS_METRICS_MONITORING_ON=False
    depends_on:
      - db
      - rabbitmq
    entrypoint: ["sh", "-c", "./entrypoint.sh gunicorn -w 4 -b 0.0.0.0:5000 'app:create_app()'"]

  worker:
    build:
      context: .
      dockerfile: src/Dockerfile.dev
      target: dev
    container_name: transaction-worker
    environment:
      - DATABASE_URL=postgresql+psycopg2://username:password@db:5432/db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - FLASK_ENV=development
      - PYTHON_PATH=/app/src
      - IS_TRACING_ON=False
      - IS_METRICS_MONITORING_ON=False
    depends_on:
      - app
    entrypoint: ["bash", "-c", "celery -A celery_config.celery_app worker --loglevel=INFO  -Q transaction-queue"]

  locust:
    image: locustio/locust
    container_name: transaction-locust
    ports:
      - "8089:8089"
    environment:
      - LOCUST_TARGET_HOST=http://app:5000
    volumes:
      - ./locustfile.py:/mnt/locust/locustfile.py
    depends_on:
      - worker
    command: -f /mnt/locust/locustfile.py --host=http://app:5000 --users 50 --spawn-rate 30 --run-time 1m
